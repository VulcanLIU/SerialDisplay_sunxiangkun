#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "Buff.h"
#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);
Buff buff;
#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2
 
#define LOGO16_GLCD_HEIGHT 16 
#define LOGO16_GLCD_WIDTH  16 
 
#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

unsigned int  distance; 
int val1=1;
int val2=1;
int val3=1;
static const uint8_t PROGMEM Motor_16x16[] ={
0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,
0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x0A,0x01,0x02,0x01,0x02,0x00,0xFE,
0x10,0x00,0x11,0xF0,0x11,0x10,0x11,0x10,0xFD,0x10,0x11,0x10,0x31,0x10,0x39,0x10,
0x55,0x10,0x55,0x10,0x91,0x10,0x11,0x12,0x11,0x12,0x12,0x12,0x12,0x0E,0x14,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00
}; 
 
static const uint8_t PROGMEM Position_16x16[] ={
0x02,0x00,0x01,0x00,0x7F,0xFE,0x40,0x02,0x80,0x04,0x00,0x00,0x3F,0xF8,0x01,0x00,
0x01,0x00,0x11,0x00,0x11,0xF8,0x11,0x00,0x11,0x00,0x29,0x00,0x47,0xFE,0x80,0x00,
0x08,0x80,0x08,0x40,0x08,0x40,0x10,0x00,0x17,0xFC,0x30,0x00,0x30,0x08,0x52,0x08,
0x92,0x08,0x11,0x10,0x11,0x10,0x11,0x10,0x11,0x20,0x10,0x20,0x1F,0xFE,0x10,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00

}; 
static const uint8_t PROGMEM Shoot_16x16[] ={
0x08,0x08,0x10,0x08,0x3E,0x08,0x22,0x08,0x3E,0xFE,0x22,0x08,0x3E,0x08,0x22,0x08,
0x22,0x48,0xFE,0x28,0x06,0x28,0x0A,0x08,0x12,0x08,0x22,0x08,0x4A,0x28,0x04,0x10,
0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,
0x01,0x00,0x01,0x00,0x21,0x08,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x00,0x08,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00
};
static const uint8_t PROGMEM State_16x16[] ={
0x00,0x00,0x00,0x00,0x7F,0xFC,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,0x00,0x00,
0x09,0x00,0x09,0x00,0x09,0x00,0x11,0xFE,0x12,0x80,0x32,0x80,0x34,0x80,0x50,0xF8,
0x90,0x80,0x10,0x80,0x10,0x80,0x10,0xFC,0x10,0x80,0x10,0x80,0x10,0x80,0x10,0x80,
0x08,0x40,0x08,0x48,0x08,0x44,0x48,0x44,0x28,0x40,0x2F,0xFE,0x08,0x40,0x08,0x40,
0x18,0x40,0x28,0xA0,0xC8,0xA0,0x08,0x90,0x09,0x10,0x09,0x08,0x0A,0x04,0x0C,0x02,
0x01,0x00,0x01,0x00,0x7F,0xFC,0x01,0x00,0x02,0x80,0x04,0x40,0x0A,0x20,0x31,0x18,
0xC0,0x06,0x01,0x00,0x08,0x88,0x48,0x84,0x48,0x12,0x48,0x12,0x87,0xF0,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00



};

 void english()
 {
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,35);
  display.print(buff.XYP);

 }
 void msg()
 {
    display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(70,52);
  display.print(buff.Msg);
 }
 void shot()
 {
   display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(40,0);
  display.print(buff.SHOT);
 }
 void pos()
 {
   display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(100,0);
  display.print(buff.POS);
 }
 void motors()
 {
   display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(40,18);
  display.print(buff.MOTORS);
 }
void setup()   {                
  Serial.begin(9600);
  delay(500);
  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3D (for the 128x64) 
  
}
void loop() {
//  Serial.println(buff.XYP);  
//  Serial.println(buff.Msg);
//  Serial.println(buff.SHOT); 
//  Serial.println(buff.POS); 
  Serial.println(buff.MOTORS);                           
  test_SSD1306();
}

 void serialEvent()
 {
  buff.onRecived();
 }
void test_SSD1306(void){
 
  display.clearDisplay();   // clears the screen and buffer
  display.setTextSize(1);
  display.ShowCN_16(0,0, Position_16x16,sizeof(Position_16x16)/32,WHITE);
  
  display.ShowCN_16(60,0, Shoot_16x16,sizeof(Shoot_16x16)/32,WHITE);
  display.ShowCN_16(0,15, Motor_16x16,sizeof(Motor_16x16)/32,WHITE);
  english();
  display.ShowCN_16(0,45, State_16x16,sizeof(State_16x16)/32,WHITE);
  msg();
  shot();
  pos();
  motors();
  display.display();
  delay(100); 
}
